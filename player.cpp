#include <iostream>
#include <SFML/Window.hpp>
#include <player.h>
#include <map.h>
using sf::Keyboard;

player::player(): tank(576, 512, "Textures/tankset.png"), timeBeforeShot(0) //определение конструктора - используем унаследованный конструктор, 
																			//передаем в него начальный координаты танка-игрока и файл с его спрайтом,
																			//устанавливаем время до выстрела по умолчанию на 0
{

}

player::~player() //определение деструктора - наследника
{
	std::cout << "Player "; //проверка удаления объекта класса - печать в консоль
}

void player::move(const sf::Int64 time) //определение функции-перемещения игрока
{
	if (Keyboard::isKeyPressed(Keyboard::Left)) //если нажали клавишу 'влево' 
	{
		t_dir = left; //направление танка-игрока - влево
		t_Speed = 0.11; //устанавливаем скорость перемещения
	}

	if (Keyboard::isKeyPressed(Keyboard::Right)) //если нажали клавишу 'вправо' 
	{
		t_dir = right; //направление танка-игрока - вправо
		t_Speed = 0.11; //устанавливаем скорость перемещения
	}

	if (Keyboard::isKeyPressed(Keyboard::Up)) //если нажали клавишу 'вверх' 
	{
		t_dir = up; //направление танка-игрока - вверх
		t_Speed = 0.11; //устанавливаем скорость перемещения
	}

	if (Keyboard::isKeyPressed(Keyboard::Down)) //если нажали клавишу 'вниз' 
	{
		t_dir = down; //направление танка-игрока - вниз
		t_Speed = 0.11; //устанавливаем скорость перемещения
	}

	switch (t_dir) //если танк-игрок перемещается:
	{
	case right: //вправо, то
		t_dx = t_Speed; //приращение координаты x равно скорости танка - движемся вправо
		t_dy = 0;
		break;

	case left: //влево, то
		t_dx = -t_Speed; //приращение координаты x равно отрицательной скорости танка - движемся влево
		t_dy = 0;
		break;

	case down: //вниз, то
		t_dx = 0; 
		t_dy = t_Speed; //приращение координаты y равно скорости танка - движемся вниз
		break;

	case up: //вверх, то
		t_dx = 0;
		t_dy = -t_Speed; //приращение координаты y равно скорости танка - движемся вверх
		break;
	}

	t_x += t_dx * time; //приращаем координату x
	t_y += t_dy * time; //приращаем координату y
}

void player::update(const sf::Int64 time, map& map) //определение функции-обновления объекта-игрока во время игры по карте
{
	move(time); //передвигаем танк-игрок

	t_Speed = 0; //скорость танка = 0
	t_Sprite.setPosition(t_x, t_y); //устанавливаем спрайт танка по его координатам
	animate(time); //анимируем танк-игрок
	map_interaction(map); //взаимодействуем танк-игрок с картой
}
